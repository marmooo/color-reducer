export class MedianCut{replaceColors;colorMapping;constructor(e){this.imageData=e.data,this.colors=this.getColorInfo()}getColorInfo(){const{imageData:s}=this,t=new Uint32Array(s.buffer),e=new Uint32Array(16777216);for(let n=0;n<t.length;n++){const s=t[n],o=s&16777215;e[o]++}const n=[];for(let t=0;t<e.length;t++){const s=e[t];if(s>0){const e=t>>16&255,o=t>>8&255,i=t&255;n.push([i,o,e,s])}}return n}calculateCubeProperties(e){const t=this.getColorStats(e),n=this.getDominantColorType(t);return{colors:e,total:t.totalUsage,type:n}}getColorStats(e){let r=0,t=0,n=0,s=0,o=255,i=255,a=255;for(const u of e){const[c,l,d,h]=u;t=Math.max(t,c),n=Math.max(n,l),s=Math.max(s,d),o=Math.min(o,c),i=Math.min(i,l),a=Math.min(a,d),r+=h}return{maxR:t,maxG:n,maxB:s,minR:o,minG:i,minB:a,totalUsage:r,rangeR:t-o,rangeG:n-i,rangeB:s-a}}getDominantColorType({rangeR:e,rangeG:t,rangeB:n}){return e>t&&e>n?"r":t>e&&t>n?"g":n>e&&n>t?"b":"g"}bucketSort(e,t){const n=new Array(256);for(let e=0;e<256;e++)n[e]=[];for(let s=0;s<e.length;s++){const o=e[s];n[o[t]].push(o)}return n.flat()}splitCubesByMedian(e,t){let o=0;for(let t=1;t<e.length;t++)e[t].total>e[o].total&&e[t].colors.length!==1&&(o=t);const n=o;if(e[n].total===1||e[n].colors.length===1)return e;const a=e[n].type,r="rgb".indexOf(a);e[n].colors=this.bucketSort(e[n].colors,r);const i=Math.floor((e[n].colors.length+1)/2),c=this.calculateCubeProperties(e[n].colors.slice(0,i)),l=this.calculateCubeProperties(e[n].colors.slice(i)),s=e.filter((e,t)=>t!==n);return s.push(c,l),s.length<t?this.splitCubesByMedian(s,t):s}apply(e,t){if(this.colors.length<=e)return;const o=this.calculateCubeProperties(this.colors),n=this.splitCubesByMedian([o],e),s=n.map(e=>{let n=0,s=0,o=0,t=0;for(const a of e.colors){const[r,c,l,i]=a;n+=r*i,s+=c*i,o+=l*i,t+=i}const i=Math.round(n/t),a=Math.round(s/t),r=Math.round(o/t);return(r*256+a)*256+i});if(this.replaceColors=s,t){const e=new Uint32Array(this.imageData.buffer),t=new Uint8Array(16777216);n.forEach((e,n)=>{const s=e.colors;for(let e=0;e<s.length;e++){const[o,i,a]=s[e],r=(a*256+i)*256+o;t[r]=n}}),this.colorMapping=t;for(let n=0;n<e.length;n++){const o=e[n],a=o&16777215,i=s[t[a]];i&&(e[n]=i|o&4278190080)}}}}