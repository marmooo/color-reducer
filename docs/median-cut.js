export class MedianCut{replaceColors;colorMapping;constructor(e){this.imageData=e.data,this.colors=this.getColorInfo()}getColorInfo(){const{imageData:s}=this,t=new Uint32Array(s.buffer),e=new Uint32Array(16777216);for(let n=0;n<t.length;n++){const s=t[n],o=s&16777215;e[o]++}const n=[];for(let t=0;t<e.length;t++){const s=e[t];if(s>0){const e=t>>16&255,o=t>>8&255,i=t&255;n.push([i,o,e,s])}}return n}calculateCubeProperties(e){const t=this.getColorStats(e),n=this.getDominantColorType(t);return{colors:e,total:t.totalUsage,type:n}}getColorStats(e){let r=0,t=0,n=0,s=0,o=255,i=255,a=255;for(let c=0;c<e.length;c++){const[l,d,u,h]=e[c];t=Math.max(t,l),n=Math.max(n,d),s=Math.max(s,u),o=Math.min(o,l),i=Math.min(i,d),a=Math.min(a,u),r+=h}return{maxR:t,maxG:n,maxB:s,minR:o,minG:i,minB:a,totalUsage:r,rangeR:t-o,rangeG:n-i,rangeB:s-a}}getDominantColorType({rangeR:e,rangeG:t,rangeB:n}){return e>t&&e>n?"r":t>e&&t>n?"g":n>e&&n>t?"b":"g"}bucketSort(e,t){const n=new Array(256);for(let e=0;e<256;e++)n[e]=[];for(let s=0;s<e.length;s++){const o=e[s];n[o[t]].push(o)}return n}splitBuckets(e,t){const n=[],s=[];let o=0;for(let i=0;i<256;i++){const a=e[i],r=a.length;if(o+r<=t)n.push(...a),o+=r;else{const r=t-o;n.push(...a.slice(0,r)),s.push(...a.slice(r));for(let t=i+1;t<256;t++)s.push(...e[t]);break}}return[n,s]}sortAndSplit(e,t){const n=this.bucketSort(e,t),s=Math.floor((e.length+1)/2);return this.splitBuckets(n,s)}splitCubesByMedian(e,t){for(;e.length<t;){let t=0,n=e[0].total;for(let s=1;s<e.length;s++){const o=e[s],i=o.total;i>n&&o.colors.length>1&&(t=s,n=i)}if(e[t].total===1)break;if(e[t].colors.length===1)break;const s=e[t].type,o="rgb".indexOf(s),[i,a]=this.sortAndSplit(e[t].colors,o),r=this.calculateCubeProperties(i),c=this.calculateCubeProperties(a);e.splice(t,1,r,c)}return e}apply(e,t){if(this.colors.length<=e)return;const o=this.calculateCubeProperties(this.colors);console.time("a");const n=this.splitCubesByMedian([o],e);console.timeEnd("a");const s=n.map(e=>{let n=0,s=0,o=0,t=0;const i=e.colors;for(let a=0;a<i.length;a++){const[r,c,l,e]=i[a];n+=r*e,s+=c*e,o+=l*e,t+=e}const a=Math.round(n/t),r=Math.round(s/t),c=Math.round(o/t);return(c*256+r)*256+a});if(this.replaceColors=s,t){const e=new Uint32Array(this.imageData.buffer),t=new Uint8Array(16777216);n.forEach((e,n)=>{const s=e.colors;for(let e=0;e<s.length;e++){const[o,i,a]=s[e],r=(a*256+i)*256+o;t[r]=n}}),this.colorMapping=t;for(let n=0;n<e.length;n++){const o=e[n],a=o&16777215,i=s[t[a]];i&&(e[n]=i|o&4278190080)}}}}